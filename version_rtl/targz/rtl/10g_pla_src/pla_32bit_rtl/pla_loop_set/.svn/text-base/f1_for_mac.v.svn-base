//FILE_HEADER-------------------------------------------------------
//ZTE Copyright(C)
// ZTE Company Confidential
//------------------------------------------------------------------
// Project Name : ZXLTE xxxx
// FILE NAME    : rx_subportid_comb.v
// AUTHOR       : xxx xxx
// Department   : ZTE-Tianjin Department
// Email        : xxx.xxx@zte.com.cn
//------------------------------------------------------------------
// Module Hiberarchy:
//x rx_subportid_comb -----|----
//x                        |----
//-----------------------------------------------------------------
// Release History:
//-----------------------------------------------------------------
// Version      Date      Author    Description
// 1.0        09-09-2011   YAO      原始版本说明；
// 1.1        mm-dd-yyyy   Author   修改、增减的主要内容描述
//-----------------------------------------------------------------
// Main Function:
// a)插入 subport tag/替换Subport id
//-----------------------------------------------------------------
//REUSE ISSUES: xxxxxxxx
//Reset Strategy: xxxxxxxx
//Clock Strategy: xxxxxxxx
//Critical Timing: xxxxxxxx
//Asynchronous Interface: xxxxxxxx
//END_HEADER--------------------------------------------------------

`timescale 1 ns / 10 ps

module f1_for_mac(
input              I_pla_rst              ,////
input              I_pla_312m5_clk        ,////
input              I_num_test_en          ,////   1表示插入SUBPORT TAG ,0保持不变
input       [31:0] I_xgmii_txd            ,////
input       [ 3:0] I_xgmii_txc            ,////
input              I_xgmii_err            ,////  
input       [ 1:0] I_xgmii_pla_num        ,////
            
output reg  [31:0] O_xgmii_txd            ,////
output reg  [ 3:0] O_xgmii_txc            ,////
output reg  [ 1:0] O_xgmii_num            ,////

output reg  [31:0] O_subport0_tag         ,///
output reg  [31:0] O_subport1_tag         ,///
output reg  [31:0] O_subport2_tag         ///

);

reg  [31:0] S_xgmii_txd            ; ///XGMII发送数据延迟1拍信号
reg  [ 3:0] S_xgmii_txc            ; ///XGMII发送使能延迟1拍信号
reg         S_xgmii_err            ; ///XGMII发送使能延迟1拍信号
reg  [31:0] S1_xgmii_txd           ; ///XGMII发送数据延迟2拍信号
reg  [ 3:0] S1_xgmii_txc           ; ///XGMII发送使能延迟2拍信号
reg         S1_xgmii_err           ; ///XGMII发送使能延迟1拍信号
reg  [31:0] S2_xgmii_txd           ; ///XGMII发送数据延迟3拍信号
reg  [ 3:0] S2_xgmii_txc           ; ///XGMII发送使能延迟3拍信号
reg         S2_xgmii_err           ; ///XGMII发送使能延迟1拍信号

reg  [1:0]  S_xgmii_num           ; ///XGMII发送数据延迟3拍信号
reg  [1:0]  S1_xgmii_num           ; ///XGMII发送使能延迟3拍信号
reg  [1:0]  S2_xgmii_num           ; ///XGMII发送使能延迟1拍信号

reg         S_preamble_flag        ; ///
reg  [ 3:0] S_cnt                  ; ///
reg         S_xgmii_data_valid     ; ///

reg         S_test_en      ; ////
reg  [31:0] S_xgmii_txd_crc           ;
reg  [ 3:0] S_xgmii_txc_crc           ;
reg         S_xgmii_err_crc           ;
reg  [31:0] S_xgmii_txd_buf1          ;
reg  [ 3:0] S_xgmii_txc_buf1          ;
reg         S_xgmii_err_buf1          ;
reg  [31:0] S_xgmii_txd_buf2          ;
reg  [ 3:0] S_xgmii_txc_buf2          ;
reg         S_xgmii_err_buf2          ;
reg  [31:0] S_xgmii_txd_buf3          ;
reg  [ 3:0] S_xgmii_txc_buf3          ;
reg         S_xgmii_err_buf3          ;

reg  [31:0] S_xgmii_txd_buf4          ;
reg  [ 3:0] S_xgmii_txc_buf4          ;
reg   [1:0] S_xgmii_num_buf4          ;



reg  [1:0]  S_xgmii_num_crc           ;
reg  [1:0]  S_xgmii_num_buf1          ;
reg  [1:0]  S_xgmii_num_buf2          ;
reg  [1:0]  S_xgmii_num_buf3          ;


wire [31:0] S_crc_out                 ;

reg  [31:0] S_num0_test ;
reg  [31:0] S_num1_test ;
reg  [31:0] S_num2_test ;
reg  [31:0] S_num_test  ;

///数据打拍
always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
    begin
        S_xgmii_txd    <= 32'h0 ;
        S_xgmii_txc    <= 4'hf  ;
		    S_xgmii_err    <= 1'b0  ;
        S1_xgmii_txd   <= 32'h0 ;
        S1_xgmii_txc   <= 4'hf  ;
        S1_xgmii_err   <= 1'h0  ;
        S2_xgmii_txd   <= 32'h0 ;
        S2_xgmii_txc   <= 4'hf  ;
        S2_xgmii_err   <= 1'h0  ;
        S_xgmii_num    <= 2'd0;
        S1_xgmii_num   <= 2'd0;
        S2_xgmii_num   <= 2'd0;        
        S_test_en  <= 1'b0;
    end
    else
    begin
        S_xgmii_txd       <= I_xgmii_txd       ;
        S_xgmii_txc       <= I_xgmii_txc       ;
		    S_xgmii_err       <= I_xgmii_err       ;
		    S_xgmii_num       <= I_xgmii_pla_num   ;
        S1_xgmii_txd      <= S_xgmii_txd       ;
        S1_xgmii_txc      <= S_xgmii_txc       ;
        S1_xgmii_err      <= S_xgmii_err       ;
        S2_xgmii_txd      <= S1_xgmii_txd      ;
        S2_xgmii_txc      <= S1_xgmii_txc      ;
        S2_xgmii_err      <= S1_xgmii_err       ;
        S2_xgmii_num      <= S1_xgmii_num  ;
        S1_xgmii_num      <= S_xgmii_num  ;
        S_test_en         <= I_num_test_en ;
    end
end

///连续收到Preamble的0x5555标志产生
always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
        S_preamble_flag <= 1'b0;
    else if((S_xgmii_txc == 4'h8)&&(S_xgmii_txd == 32'hfb555555)&&(I_xgmii_txc == 4'h0)&&(I_xgmii_txd == 32'h555555d5))  ///非压缩报文
        S_preamble_flag <= 1'b1;
    else
        S_preamble_flag <= 1'b0;
end

///连续收到Preamble的0x5555标志产生
always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
        S_cnt <= 4'hf;
    else if(S_preamble_flag)  ///非压缩报文
        S_cnt <= 4'd0;
    else
    begin
        if (S_cnt == 4'hf)
            S_cnt <= S_cnt;
        else
            S_cnt <= S_cnt + 4'b1;
    end
end

always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
        S_xgmii_data_valid <= 1'b0;
    else if(S_preamble_flag)  ///非压缩报文
        S_xgmii_data_valid <= 1'b1;
    else if(I_xgmii_txc == 4'hf)
        S_xgmii_data_valid <= 1'b0;
end


always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
    begin
        O_subport0_tag  <= 32'd0;
        O_subport1_tag  <= 32'd0;
        O_subport2_tag  <= 32'd0;        
    end    
    else if (S_cnt == 4'd2) 
    begin
        if (I_xgmii_pla_num == 2'd0)      
            O_subport0_tag  <= S2_xgmii_txd;
        else if (I_xgmii_pla_num == 2'd1)
            O_subport1_tag  <= S2_xgmii_txd;
        else if (I_xgmii_pla_num == 2'd2)
            O_subport2_tag  <= S2_xgmii_txd;  
    end
end


always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
    begin
        S_num0_test   <= 32'hffff0000;
        S_num1_test   <= 32'hffff0000;
        S_num2_test   <= 32'hffff0000;  
        S_num_test    <= 32'hffff0000;      
    end    
    else if (S_xgmii_txc == 4'h8)
    begin
        if (I_xgmii_pla_num == 2'd0)
            S_num0_test[7:0]  <= S_num0_test[7:0] + 16'd1;
        else if (I_xgmii_pla_num == 2'd1)
            S_num1_test[7:0]  <= S_num1_test[7:0] + 16'd1;
        else if (I_xgmii_pla_num == 2'd2)
            S_num2_test[7:0]  <= S_num2_test[7:0] + 16'd1;
    end
    else if (S_cnt == 4'd1)
    begin
        if (I_xgmii_pla_num == 2'd0)
            S_num_test  <= S_num0_test;
        else if (I_xgmii_pla_num == 2'd1)
            S_num_test  <= S_num1_test;
        else if (I_xgmii_pla_num == 2'd2)
            S_num_test  <= S_num2_test;     
    end
end



///替换subport_id在subport tag，添加subport tag的数据
always @ (posedge I_pla_312m5_clk or posedge I_pla_rst)
begin
    if(I_pla_rst)
    begin
        S_xgmii_txd_crc   <= 32'd0 ;
        S_xgmii_txc_crc   <= 4'hf  ;
	     	S_xgmii_err_crc   <= 1'b0  ;
	     	S_xgmii_num_crc   <= 2'd0  ;
    end
    else if((S_cnt == 4'd2) && (I_xgmii_pla_num != 2'd3))    
    begin
        S_xgmii_txd_crc   <= S_num_test;
        S_xgmii_txc_crc   <= S2_xgmii_txc;
	    	S_xgmii_err_crc   <= S2_xgmii_err;
	    	S_xgmii_num_crc   <= S2_xgmii_num ;
    end
    else if(I_xgmii_pla_num != 2'd3)
    begin
        S_xgmii_txd_crc   <= S2_xgmii_txd ;
        S_xgmii_txc_crc   <= S2_xgmii_txc ;
        S_xgmii_err_crc   <= S2_xgmii_err ;
        S_xgmii_num_crc   <= S2_xgmii_num ;
    end
    
end


crc32_top   U_crc32_top  (
.I_rst                (1'b0                ),  ///复位信号，高有效
.I_sys_clk            (I_pla_312m5_clk     ),  ///系统时钟
.I_crc_data           (S_xgmii_txd_crc     ),  ///Gmii数据
.I_xgmii_ctl          (S_xgmii_txc_crc     ),  ///EGMII数据奇偶标识
.O_crc_out            (S_crc_out           )   ///
);

always @(posedge I_pla_312m5_clk)
begin
    S_xgmii_txd_buf1 <= S_xgmii_txd_crc ;
    S_xgmii_txc_buf1 <= S_xgmii_txc_crc ;
    S_xgmii_err_buf1 <= S_xgmii_err_crc ;
    S_xgmii_num_buf1 <= S_xgmii_num_crc ;
end

always @(posedge I_pla_312m5_clk)
begin
    S_xgmii_txd_buf2 <= S_xgmii_txd_buf1 ;
    S_xgmii_txc_buf2 <= S_xgmii_txc_buf1 ;
    S_xgmii_err_buf2 <= S_xgmii_err_buf1 ;
    S_xgmii_num_buf2 <= S_xgmii_num_buf1 ;
end

always @(posedge I_pla_312m5_clk)
begin
    S_xgmii_txd_buf3 <= S_xgmii_txd_buf2 ;
    S_xgmii_txc_buf3 <= S_xgmii_txc_buf2 ;
    S_xgmii_err_buf3 <= S_xgmii_err_buf2 ;
    S_xgmii_num_buf3 <= S_xgmii_num_buf2 ;
end


always @(posedge I_pla_312m5_clk)
begin
    if(S_xgmii_txc_buf1[3] && !S_xgmii_txc_buf2[3])
	  begin
	    if(!S_xgmii_err_buf2)
		  begin
	        case(S_xgmii_txc_buf2[2:0])
		    3'b000: S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
		    3'b001: S_xgmii_txd_buf4 <= {S_xgmii_txd_buf3[31:8],S_crc_out[31:24]};
		    3'b011: S_xgmii_txd_buf4 <= {S_xgmii_txd_buf3[31:16],S_crc_out[31:16]};
		    3'b111: S_xgmii_txd_buf4 <= {S_xgmii_txd_buf3[31:24],S_crc_out[31:8]};
		    default : S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
		    endcase
		  end
		else
		begin
	        case(S_xgmii_txc_buf2[2:0])
		    3'b000: S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
		    3'b001: S_xgmii_txd_buf4 <= {S_xgmii_txd_buf3[31:8],8'h0};
		    3'b011: S_xgmii_txd_buf4 <= {S_xgmii_txd_buf3[31:16],16'h0};
		    3'b111: S_xgmii_txd_buf4 <= {S_xgmii_txd_buf3[31:24],24'h0};
		    default : S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
		    endcase
		end
	end
	else if(S_xgmii_txc_buf2[3] && !S_xgmii_txc_buf3[3])
	begin
	  if(!S_xgmii_err_buf3)
		begin
	      case(S_xgmii_txc_buf3[2:0])
		    3'b000: S_xgmii_txd_buf4 <= S_crc_out ;
		    3'b001: S_xgmii_txd_buf4 <= {S_crc_out[23:0],8'hfd};
		    3'b011: S_xgmii_txd_buf4 <= {S_crc_out[15:0],16'hfd07};
		    3'b111: S_xgmii_txd_buf4 <= {S_crc_out[7:0],24'hfd0707};
		    default : S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
		    endcase
		end
		else
		begin
	        case(S_xgmii_txc_buf3[2:0])
		    3'b000: S_xgmii_txd_buf4 <= 32'h0 ;
		    3'b001: S_xgmii_txd_buf4 <= {24'h0,8'hfd};
		    3'b011: S_xgmii_txd_buf4 <= {16'h0,16'hfd07};
		    3'b111: S_xgmii_txd_buf4 <= {8'h0,24'hfd0707};
		    default : S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
		    endcase
		end
	end
	else
	begin
	    S_xgmii_txd_buf4 <= S_xgmii_txd_buf3 ;
	end
end

always @(posedge I_pla_312m5_clk)
begin
    S_xgmii_txc_buf4 <= S_xgmii_txc_buf3 ;
    S_xgmii_num_buf4 <= S_xgmii_num_buf3 ;
end



always @(posedge I_pla_312m5_clk)
begin
    if (S_test_en)
    begin
        O_xgmii_txd  <= S_xgmii_txd_buf4  ;
        O_xgmii_txc  <= S_xgmii_txc_buf4  ;     
        O_xgmii_num  <= S_xgmii_num_buf4  ;     
    end
    else 
    begin
       O_xgmii_txd  <= I_xgmii_txd       ; 
       O_xgmii_txc  <= I_xgmii_txc       ;     
       O_xgmii_num  <= I_xgmii_pla_num   ; 
    
    end
end



endmodule
